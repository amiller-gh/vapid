{"version":3,"file":"index.js","sourceRoot":"","sources":["../../lib/Renderer/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport {\n  join,\n  resolve,\n} from 'path';\nimport Boom from '@hapi/boom';\nimport Koa from 'koa';\n\nimport { TemplateCompiler } from '../TemplateCompiler';\nimport { Logger, Paths } from '../utils';\nimport { helper } from '../directives';\nimport { PageType, Record as DBRecord, Template } from '../Database/models';\nimport Vapid from '../runners/Vapid';\nimport { IProvider } from '../Database/providers';\n\nconst { views: viewsPath } = Paths.getDashboardPaths();\n\nasync function makeHelpers(record: DBRecord, template: Template, pages: Record<string, any>, provider: IProvider) {\n  const { fields } = template;\n  const { content } = record;\n  const out: object = {};\n  /* eslint-disable-next-line no-param-reassign */\n  record.template = template; // Required for permalink getter\n  for (const key of Object.keys(content)) {\n    out[key] = await helper(content[key], fields[key] as any, pages);\n  }\n\n  out[TemplateCompiler.DATA_SYMBOL] = await record.getMetadata('/', provider);\n\n  return out;\n}\n\n/**\n *\n * Renders content into site template\n *\n * @param {string} uriPath\n * @return {string} rendered HTML\n *\n * @todo Use Promise.all when fetching content\n */\nexport async function renderContent(this: Vapid, uriPath: string) {\n  const record = await Paths.getRecordFromPath(uriPath.slice(1), this.provider);\n\n  if (!record) {\n    throw Boom.notFound('Record not found');\n  }\n\n  const template = record.template;\n  const templateName = template.name;\n  let pagePath = null;\n  if (template.type === 'page') {\n    const htmlFile = join(this.paths.www, `${templateName}.html`);\n    const dirFile = join(this.paths.www, templateName, 'index.html');\n    pagePath = (fs.existsSync(htmlFile) && htmlFile) || (fs.existsSync(dirFile) && dirFile) || null;\n  } else if (template.type === 'collection') {\n    const partial = join(this.paths.www, `_${templateName}.html`);\n    const collection = join(this.paths.www, `collections/${templateName}.html`);\n    pagePath = (fs.existsSync(collection) && collection) ||\n      (fs.existsSync(partial) && partial) ||\n      null;\n  }\n\n  if (!pagePath) {\n    throw Boom.notFound('Template file not found');\n  }\n\n  const componentLookup = (tag: string): string => {\n    return fs.readFileSync(join(process.env.TEMPLATES_PATH, 'components', `${tag}.html`), 'utf8');\n  }\n\n  const compiler = new TemplateCompiler(componentLookup);\n  const { name, type, data, ast } = compiler.parseFile(pagePath);\n\n  // Fetch all renderable pages.\n  const pages = await this.provider.getRecordsByType(PageType.PAGE);\n\n  // Generate our navigation menu.\n  const navigation = [];\n  for (const page of pages) {\n    const meta = await page.getMetadata(uriPath, this.provider);\n    if (!meta.isNavigation) { continue; }\n    navigation.push(meta);\n  }\n\n  // Create our page context data.\n  const pageMeta = await Promise.all(pages.map(p => p.getMetadata(uriPath, this.provider)));\n  const pageData = await makeHelpers(record, template, { pages: pageMeta }, this.provider);\n  const context = { this: {} };\n  for (const key of Object.keys(pageData)) {\n    context.this[key] = pageData[key];\n  }\n\n  /* eslint-disable no-await-in-loop */\n  for (const model of Object.values(data)) {\n    if (model.type === 'page') { continue; }\n    // Fetch all templates where the type and model name match.\n    const templates = [await this.provider.getTemplateByName(model.name, model.type)];\n    const _records = await Promise.all(templates.map(async (t) => {\n      if(!t) { return; }\n      const records = await this.provider.getRecordsByTemplateId(t.id);\n      return Promise.all(records.map(r => makeHelpers(r, t, { pages: pageMeta }, this.provider)));\n    }));\n\n    const records = (_records.filter(Boolean) as any).flat() as object[];\n\n    const firstRecord = records[0] || {};\n\n    context[model.name] = (model.type === PageType.COLLECTION) ? records : firstRecord;\n  }\n\n  /* eslint-enable no-await-in-loop */\n  return compiler.render(name, type, ast, context, {\n    navigation,\n    page: await record.getMetadata(uriPath, this.provider),\n    site: {\n      domain: this.domain,\n      name: this.name,\n    },\n  });\n};\n\n/**\n *\n * Renders error, first by looking in the site directory,\n * then falling back to Vapid own error template.\n *\n * @param {Error} err\n * @param {Object} request\n * @return {[status, rendered]} HTTP status code, and rendered HTML\n */\nexport function renderError(this: any, err: Error, request: Koa.Request) {\n  const error = Boom.boomify(err);\n  let status = error.output.statusCode;\n  let rendered;\n  let errorFile;\n\n  if (process.env.NODE_ENV === 'development' && status !== 404) {\n    errorFile = resolve(viewsPath, 'errors', 'trace.html');\n    rendered = new TemplateCompiler().renderFile(errorFile, {\n      error: {\n        status,\n        title: error.output.payload.error,\n        message: error.message,\n        stack: error.stack,\n      },\n      request,\n    });\n  } else {\n    const siteFile = resolve(this.paths.www, '_error.html');\n    status = status === 404 ? 404 : 500;\n    errorFile = status === 404 && fs.existsSync(siteFile) ? siteFile : resolve(viewsPath, 'errors', `${status}.html`);\n    rendered = fs.readFileSync(errorFile, 'utf-8');\n  }\n\n  if (status !== 404) {\n    Logger.extra(error.stack);\n  }\n\n  return [status, rendered];\n};\n"]}