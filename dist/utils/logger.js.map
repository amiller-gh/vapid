{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../lib/utils/logger.ts"],"names":[],"mappings":";;;;;AAAA,+BAA+B;AAC/B,oDAA4B;AAE5B,MAAM,KAAK,GAAG,KAAK,CAAC;AAEpB;;GAEG;AACH,MAAqB,MAAM;IACzB;;;;;;OAMG;IACH,MAAM,CAAC,IAAI,CAAC,GAAW;QACrB,OAAO,CAAC,GAAG,CAAC,GAAG,gBAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IACD;;;;;;OAMG;IACH,MAAM,CAAC,IAAI,CAAC,GAAW;QACrB,OAAO,CAAC,GAAG,CAAC,gBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,MAAM,CAAC,GAAW,EAAE,GAAW,EAAE,KAAK,GAAG,QAAQ;QACtD,MAAM,YAAY,GAAG,gBAAM,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,KAAK,YAAY,IAAI,GAAG,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,KAAK,CAAC,GAAU;QACrB,OAAO,CAAC,KAAK,CAAC,gBAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC;IAClD,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,KAAK,CAAC,KAAwB;QACnC,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;CACF;AAxDD,yBAwDC","sourcesContent":["/* eslint-disable no-console */\nimport colors from 'colors';\n\nconst ARROW = '==>';\n\n/**\n * Decorates console.log statements with colors and symbols\n */\nexport default class Logger {\n  /**\n   * @static\n   *\n   * General information messages in bold blue, with ==> arrow\n   *\n   * @param {string} str\n   */\n  static info(str: string) {\n    console.log(`${colors.blue(ARROW)} ${str}`.bold);\n  }\n  /**\n   * @static\n   *\n   * Warnings in bold yellow\n   *\n   * @param {string} str\n   */\n  static warn(str: string) {\n    console.log(colors.bold.yellow(`WARNING: ${str}`));\n  }\n\n  /** @static\n   *\n   * Tagged information\n   *\n   * @param {string} tag\n   * @param {string} str\n   */\n  static tagged(tag: string, str: string, color = 'yellow') {\n    const formattedTag = colors[color](`[${tag}]`);\n    console.log(`  ${formattedTag} ${str}`);\n  }\n\n  /**\n   * @static\n   *\n   * Errors in bold red\n   *\n   * @param {string} err\n   */\n  static error(err: Error) {\n    console.error(colors.bold.red(`ERROR: ${err}`));\n  }\n\n  /**\n   * @static\n   *\n   * Additional information with generic formatting, line returns\n   *\n   * @param {string|array} lines\n   */\n  static extra(lines: string[] | string) {\n    const combined = (Array.isArray(lines) ? lines : [lines]).join('\\n');\n    console.log(combined);\n  }\n}\n"]}