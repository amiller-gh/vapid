{"version":3,"file":"link.js","sourceRoot":"","sources":["../../lib/directives/link.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,iCAAuC;AACvC,yCAAmC;AASnC,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AAExB,MAAqB,aAAc,SAAQ,oBAAgC;IAA3E;;QAEE,YAAO,GAAG;YACR,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,CAAC;YACX,MAAM,EAAE,KAAK;YACb,MAAM,EAAE,KAAK;SACd,CAAA;QAED,UAAK,GAAG;YACN,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE,KAAK;SAChB,CAAA;IAiFH,CAAC;IA/EC,2CAA2C;IAC3C;;;;;;OAMG;IACH,KAAK,CAAC,IAAY,EAAE,QAA2B,IAAI;QACjD,IAAI,eAAe,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,KAAI,EAAE,CAAC;QACvC,IAAI,YAAY,GAAG,IAAI,CAAC;QACxB,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;YACjD,MAAM,QAAQ,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,MAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YACxD,MAAM,MAAM,GAAG,kBAAkB,CAAC,CAAC,EAAE,KAAK,QAAQ,IAAI,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC;YAC1E,IAAI,QAAQ,EAAE;gBACZ,YAAY,GAAG,CAAC,CAAC;gBACjB,eAAe,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;aAC5B;YACD,OAAO,IAAI,GAAG,MAAM,CAAC;QACvB,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO;uCAC4B,IAAI;sBACrB,IAAI;;iCAEO,IAAI,iBAAiB,IAAI,kBAAkB,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,KAAI,EAAE,kBAAkB,eAAe;;sBAExG,IAAI;;wBAEF,IAAI,eAAe,IAAI,kBAAkB,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;;YAEnF,OAAO;;;kCAGe,IAAI,iBAAiB,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG;;KAE5D,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,OAAO,CAAC,QAA2B,IAAI,CAAC,OAAO,CAAC,OAAO;QACrD,OAAO,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,KAAI,EAAE,CAAC;IAC1B,CAAC;IACD,0CAA0C;IAE1C;;OAEG;IACG,MAAM,CAAC,QAA2B,IAAI,CAAC,OAAO,CAAC,OAAO;;YAE1D,MAAM,IAAI,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,EAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACjF,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,KAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAA,CAAC,CAAC,CAAC,CAAC,MAAM,kBAAM,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAEvF,IAAI,GAAG,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,MAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,EAAE,CAAA,IAAI,EAAE,CAAC;YAChD,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,KAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACpC,GAAG,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACjC;YAED,OAAO;gBACL,EAAE,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,EAAE;gBACb,GAAG,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,MAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,EAAE,CAAA;gBACpC,IAAI,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,MAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,EAAE,CAAA,KAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAA;gBAC/C,IAAI,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI;gBACjB,WAAW,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW;gBAClC,KAAK,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,KAAK;gBACtB,OAAO,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO;gBAC1B,QAAQ,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ;gBAC5B,MAAM,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM;gBACxB,YAAY,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,YAAY;gBACpC,UAAU,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU;gBAChC,QAAQ,KAAK,OAAO,GAAG,CAAC,CAAC,CAAC;aAC3B,CAAC;QACJ,CAAC;KAAA;CACF;AA/FD,gCA+FC;AAED;;;;;;;;GAQG;AACH,SAAe,OAAO,CAAC,KAAa;;QAClC,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE9B,IAAI,MAAM,EAAE;YACV,OAAO,MAAM,CAAC;SACf;QAED,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,kBAAM,CAAC,KAAK,CAAC,CAAC;YACrC,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC;SAChC;QAAC,OAAO,GAAG,EAAE;YACZ,MAAM,GAAG,YAAY,KAAK,KAAK,KAAK,MAAM,CAAC;SAC5C;QAED,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACzB,OAAO,MAAM,CAAC;IAChB,CAAC;CAAA","sourcesContent":["import { BaseDirective } from './base';\nimport { unfurl } from 'unfurl.js';\n\ninterface ILinkValue {\n  id: string,\n  url: string,\n  name: string,\n  page: number,\n}\n\nconst cache = new Map();\n\nexport default class LinkDirective extends BaseDirective<ILinkValue | null> {\n\n  options = {\n    default: null,\n    label: '',\n    help: '',\n    priority: 0,\n    unfurl: false,\n    format: 'url',\n  }\n\n  attrs = {\n    placeholder: '',\n    required: false,\n  }\n\n  /* eslint-disable class-methods-use-this */\n  /**\n   * Renders an HTML url input\n   *\n   * @param {string} name\n   * @param {string} [value=this.options.default]\n   * @return rendered input\n   */\n  input(name: string, value: ILinkValue | null = null) {\n    let namePlaceholder = value?.url || '';\n    let selectedPage = null;\n    const options = this.meta.pages.reduce((memo, p) => {\n      const selected = value?.page === p.id ? 'selected' : '';\n      const option = `<option value=\"${p.id}\" ${selected}>${p.name()}</option>`;\n      if (selected) {\n        selectedPage = p;\n        namePlaceholder = p.name();\n      }\n      return memo + option;\n    }, '');\n\n    return `\n      <fieldset class=\"fieldset\" id=\"${name}\">\n        <label for=\"${name}[name]\">Text</label>\n        <small class=\"help\">Human readable link text</small>\n        <input type=\"text\" id=\"${name}[name]\" name=\"${name}[name]\" value=\"${value?.name || ''}\" placeholder=\"${namePlaceholder}\">\n\n        <label for=\"${name}[url]\">Link</label>\n        <small class=\"help\">The Page or URL to link to</small>\n        <select name=\"${name}[page]\" id=\"${name}[page]\" class=\"${selectedPage ? 'selected' : ''}\">\n          <option value=\"\">Select a Page</option>\n          ${options}\n        </select>\n        <span>or</span>\n        <input type=\"url\" name=\"${name}[url]\" value=\"${value?.url}\" placeholder=\"Enter a URL\">\n      </fieldset>\n    `;\n  }\n\n  /**\n   * The raw value.\n   * Typically, directives escape the value.\n   *\n   * @param {string} [value=this.options.default]\n   * @return {string}\n   */\n  preview(value: ILinkValue | null = this.options.default) {\n    return value?.url || '';\n  }\n  /* eslint-enable class-methods-use-this */\n\n  /**\n   * Renders the link, or optionally an oEmbed\n   */\n  async render(value: ILinkValue | null = this.options.default) {\n\n    const page = value?.page ? this.meta.pages.find(p => p.id === value.page) : null;\n    const unfurled = (this.options.unfurl && value?.url) ? await unfurl(value?.url) : null;\n\n    let str = value?.url || page?.permalink() || '';\n    if (value?.url && this.options.unfurl) {\n       str = await _oembed(value.url);\n    }\n\n    return {\n      id: value?.id,\n      url: value?.url || page?.permalink(),\n      name: value?.name || page?.name() || value?.url,\n      page: value?.page,\n      description: unfurled?.description,\n      title: unfurled?.title,\n      favicon: unfurled?.favicon,\n      keywords: unfurled?.keywords,\n      oEmbed: unfurled?.oEmbed,\n      twitter_card: unfurled?.twitter_card,\n      open_graph: unfurled?.open_graph,\n      toString() { return str; }\n    };\n  }\n}\n\n/**\n * @private\n *\n * Attempt to get the oEmbed info for a given link\n * Falls back to an <a> tag if that's not possible.\n *\n * @param {string} value\n * @return {string}\n */\nasync function _oembed(value: string): Promise<string> {\n  let result = cache.get(value);\n\n  if (result) {\n    return result;\n  }\n\n  try {\n    const unfurled = await unfurl(value);\n    result = unfurled.twitter_card;\n  } catch (err) {\n    result = `<a href=\"${value}\">${value}</a>`;\n  }\n\n  cache.set(value, result);\n  return result;\n}\n"]}