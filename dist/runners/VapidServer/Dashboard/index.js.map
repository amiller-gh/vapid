{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/runners/VapidServer/Dashboard/index.ts"],"names":[],"mappings":"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","sourcesContent":["import checksum from 'md5-file';\nimport { toSnakeCase, Json } from '@universe/util';\n\nimport { Paths } from '../../../utils';\n\nimport { join, parse, resolve } from 'path';\nimport url from 'url';\nimport { readFileSync, writeFileSync, ReadStream } from 'fs';\n\nimport { deploy, makePublic } from '@cannery/hoist';\nimport Boom from '@hapi/boom';\nimport Koa from 'koa';\n\nimport bodyParser from 'koa-bodyparser';\nimport multipartParser from 'koa-busboy';\nimport views from 'koa-views';\nimport Router from 'koa-router';\nimport { getRecordFromPath } from '../../../utils/paths';\nimport { IRecord, Record } from '../../../Database/models/Record';\nimport { ITemplate, PageType, Template } from '../../../Database/models/Template';\n\nimport VapidBuilder from '../../VapidBuilder';\nimport middleware from '../middleware';\nimport Database from '../../../Database';\nimport { IProvider } from '../../../Database/providers';\nimport * as directives from '../../../directives';\n\nimport Form from '../../../form';\n\nfunction stampRecord(template: Template): IRecord {\n  return {\n    id: NaN,\n    templateId: template.id,\n    parentId: null,\n    position: 0,\n    slug: '',\n    content: {},\n    metadata: {},\n    createdAt: Date.now(),\n    updatedAt: Date.now(),\n  }\n}\n\nasync function updateRecordPosition(db: IProvider, record: Record, from: number | null = null, to: number | null = null, nav: string | boolean | null = null) {\n  record = record;\n  from = from ? parseInt(`${from}`, 10) : null;\n  to = to ? parseInt(`${to}`, 10) : null;\n  nav = !!(nav === 'true' || nav === true);\n  const template = await db.getTemplateById(record.templateId);\n  if (!template) { return; }\n  const templateType = template.type;\n  const siblings = (templateType === 'page' ? await db.getRecordsByType(PageType.PAGE) : await db.getRecordsByTemplateId(template.id))\n  .sort((a, b) => (a.position > b.position ? 1 : -1));\n\n  if (from && isNaN(from) && to && isNaN(to)) {\n    const maxPosition = siblings.map(s => s.position).sort().pop() || 0;\n    record.position = maxPosition + 1;\n    await db.updateRecord(record);\n  } else {\n    const items = siblings.filter(obj => obj.id !== record.id);\n    items.splice(to || 0, 0, record);\n    const promises: Promise<Record>[] = [];\n    items.forEach((item, position) => {\n      item.position = position;\n      promises.push(db.updateRecord(item));\n    });\n\n    await Promise.all(promises);\n    if (typeof nav === 'boolean') {\n      const metadata = record.metadata = record.metadata || {};\n      metadata.isNavigation = nav;\n      await db.updateRecord(record)\n    }\n  }\n}\n\ntype JSONRecord = ReturnType<Record[\"toJSON\"]>;\ntype JSONTemplate = ReturnType<Template[\"toJSON\"]>;\n\ninterface AppState {\n  pages: JSONRecord[];\n  settings: JSONTemplate[];\n  collections: JSONTemplate[];\n  showBuild: boolean;\n  needsBuild: boolean;\n  template: JSONTemplate;\n  record: JSONRecord | null;\n}\n\ninterface IKoaContext {\n  csrf: string | undefined,\n  flash: (type: 'success' | 'error' | 'warning', message: string) => void;\n  render: (relPath: string, title: string, locals?: Json) => Promise<void>;\n  pages: JSONRecord[];\n}\n\n// TODO: Don't use module globals.\ninterface DashboardOptions {\n  local: boolean;\n  uploadsDir: string;\n  siteName: string;\n  sitePaths: { root: string; };\n  liveReload: boolean;\n  provider: IProvider;\n  db: Database;\n}\n\n/**\n * Dashboard\n * Server routes for authenticating, installing, and managing content\n */\nexport default class Dashboard {\n\n  private db: Database;\n  private provider: IProvider;\n  private router = new Router<AppState, IKoaContext>({ prefix: '/dashboard' });\n  private options: DashboardOptions;\n  public paths = Paths.getDashboardPaths();\n\n  /**\n   * @param {Object} sharedVars - variables shared by Vapid class\n   *\n   * @todo Maybe there's a more standard way of sharing with koa-router classes?\n   */\n  constructor(opts: DashboardOptions) {\n    this.options = opts;\n    this.db = opts.db;\n    this.provider = opts.provider;\n    const router = this.router;\n    const paths = this.paths;\n\n    /*\n    * BEFORE ACTIONS\n    */\n   const defaultSection = async (ctx: Koa.Context, next: () => void) => {\n    const record = await this.provider.getIndex() || await this.provider.getGeneral();\n    ctx.state.template = record && record.template.toJSON();\n    ctx.state.record = record?.toJSON();\n    await next();\n  }\n\n  const _editRecordAction = async (\n    ctx: Koa.Context,\n    type: PageType,\n    pageRecord: Record | null,\n    template: Template,\n    record: Record | null,\n    errors = [],\n  ) => {\n    const name = type === 'page' ? record?.name() : record?.nameSingular();\n    const title = record && isNaN(record?.id) ? `New ${name}${type === 'page' ? 'Page' : ''}` : name;\n    return await ctx.render('records/edit', title, {\n      isNewRecord: !record,\n      pageRecord: pageRecord?.toJSON() || null,\n      template: template.toJSON(),\n      record: record?.toJSON() || null,\n      errors: _errors(errors),\n      Form,\n    });\n  }\n\n  function _errors(errorObjects: Error[] | Error = []): Json {\n    const errorItems = Array.isArray(errorObjects) ? errorObjects : [errorObjects];\n    const errors = errorItems.reduce((memo, item) => {\n      const value = ((str) => {\n        try {\n          return JSON.parse(str);\n        } catch (err) {\n          return str;\n        }\n      })(item.message);\n\n      /* eslint-disable-next-line no-param-reassign */\n      memo[(item as any).path] = value;\n      return memo;\n    }, {});\n\n    return errors;\n  }\n\n    /*\n    * MIDDLEWARES\n    */\n    router\n      .use(middleware.redirect)\n      .use(bodyParser({}))\n      .use(multipartParser())\n      .use(middleware.flash)\n      .use(middleware.csrf)\n\n    router.use(views(paths.views, {\n      extension: 'ejs',\n      map: {\n        html: 'ejs',\n      },\n    }));\n\n    // TODO: Remove this hack, and create custom views-like middleware\n    this.router.use(async (ctx, next) => {\n      // Override ctx.render to accept layouts, and add common locals\n      const { render } = ctx;\n\n      ctx.render = async (relPath, title, locals = {}) => {\n        const layout = relPath.startsWith('auth/') ? 'auth' : 'default';\n\n        Object.assign(locals, {\n          yield: relPath,\n          title,\n          csrf: ctx.csrf,\n          flash: (ctx.flash as unknown as () => void)(),\n          requestURL: ctx.request.url,\n          siteName: this.options.siteName,\n          liveReload: this.options.liveReload,\n        });\n\n        await (render as unknown as (path: string, ctx: Json) => Promise<void>)(`layouts/${layout}`, locals);\n      };\n\n      await next();\n    });\n\n    /*\n    * ROOT\n    */\n\n    this.router.get('root', '/', defaultSection, async (ctx) => {\n      ctx.redirect(router.url('sections#index', { type: ctx.state.template.type, name: ctx.state.template.name }));\n    });\n\n    this.router.use(async (ctx, next) => {\n      // For the nav menu\n      ctx.state.settings = await (await this.provider.getTemplatesByType(PageType.SETTINGS)).map(s => s.toJSON());\n      ctx.state.pages = [...await this.provider.getRecordsByType(PageType.PAGE)].map(p => p.toJSON());\n      ctx.state.collections = (await this.provider.getTemplatesByType(PageType.COLLECTION)).map(s => s.toJSON());\n\n      ctx.state.showBuild = this.options.local;\n      ctx.state.needsBuild = this.db.isDirty();\n      await next();\n    });\n\n    /*\n    * Deploy\n    */\n    router.get('deploy', '/deploy', async (ctx) => {\n      const staticBuildPath = join(this.options.sitePaths.root, 'dist');\n      const builder = new VapidBuilder(this.options.sitePaths.root);\n      try {\n        await builder.build(staticBuildPath);\n      } catch (err) {\n        console.error(err);\n        throw err;\n      }\n      const siteUrl = await deploy(staticBuildPath, undefined, undefined, console, false);\n      await makePublic(staticBuildPath);\n      ctx.redirect(siteUrl);\n    });\n\n    /*\n    * BUILD\n    */\n    router.get('build', '/build', async (ctx) => {\n    await this.db.rebuild();\n\n    // TODO: Not nuts about hard-coding paths here\n    const redirectTo = await (async () => {\n      try {\n        const referer = ctx.get('Referrer');\n        const matches = referer ? url.parse(referer)?.path?.match(/\\/dashboard\\/(records|templates)\\/(\\d+)/) : null;\n        if (!matches || !matches.length) {\n          return router.url('root', {});\n        }\n        const models = { records: Record, templates: Template };\n        await models[matches[1]].findByPk(matches[2], { rejectOnEmpty: true });\n        return 'back';\n      } catch (err) {\n        return router.url('root', {});\n      }\n    })();\n\n    ctx.flash('success', 'Site build complete');\n    ctx.redirect(redirectTo, router.url('root', {}));\n    });\n\n    /*\n    * RECORDS\n    */\n\n    // TODO: Re-add Re-ordering.\n    router.post('records#reorder', '/records/reorder', async (ctx) => {\n      const { id, from, to, nav } = (ctx.request as any).body as { id: number; from: number; to: number; nav: boolean; };\n      const record = await this.provider.getRecordById(id);\n      record && await updateRecordPosition(this.provider, record, from, to, nav);\n      ctx.status = 200;\n    });\n\n    router.post('image#upload', '/upload', async (ctx) => {\n      const files: ReadStream[] = (ctx.request as unknown as any).files as ReadStream[] || [];\n      if (files.length > 1) {\n        ctx.status = 400;\n        ctx.body = {\n          status: 'error',\n          message: 'One file at a time.',\n        };\n        return;\n      }\n\n      const fileUrl = await _saveFile(files[0]);\n      ctx.status = 200;\n      ctx.body = {\n        status: 'success',\n        data: { url: `/uploads/${fileUrl}` },\n      };\n    });\n\n    /*\n    * GROUPS\n    */\n\n    router.get('sections#pages', '/new', async (ctx) => {\n      // Else, this is a single-record type of template. Render the edit page.\n      const templates = await this.provider.getTemplatesByType(PageType.PAGE);\n      ctx.state.record = null;\n      return ctx.render('records/templates', 'New Page', { templates } as unknown as Json);\n    });\n\n    router.get('records#new', '/new/:type/(.*)', async (ctx) => {\n      const type = ctx.params.type as PageType;\n      let slug = ctx.params[0] || 'index';\n      if (slug.endsWith('/')) { slug = slug.slice(0, -1); }\n      if (slug === '' || slug === '/') { slug = 'index'; }\n\n      let record = slug ? await getRecordFromPath(slug, this.provider) : null;\n      let template = record ? await this.provider.getTemplateById(record.templateId) : await this.provider.getTemplateByName(slug, type);\n      template = template ? await this.provider.getTemplateByName(template.name, type) : null;\n      if (!template) { throw Boom.notFound(`Template ${ctx.params.type}:${ctx.params.name} not found`); }\n\n      const tmpl = (await this.provider.getTemplateById(template.id))!;\n      const tmpRecord = stampRecord(tmpl);\n      tmpRecord.parentId = type === PageType.COLLECTION ? record?.id || null : null\n\n      record = await this.provider.updateRecord(tmpRecord);\n\n      return _editRecordAction(\n        ctx,\n        type,\n        record,\n        template,\n        new Record(tmpRecord, tmpl),\n        [],\n      )\n    });\n\n    router.post('records#update', '/:type/(.*)', async (ctx) => {\n      let slug = ctx.params[0] || 'index';\n      if (slug.endsWith('/')) { slug = slug.slice(0, -1); }\n      if (slug === '' || slug === '/') { slug = 'index'; }\n\n      const type = ctx.params.type as PageType;\n      let record = slug ? await getRecordFromPath(slug, this.provider) : null;\n      let template = record ? await this.provider.getTemplateById(record.templateId) : await this.provider.getTemplateByName(slug, type);\n      template = template ? await this.provider.getTemplateByName(template.name, type) : null;\n\n      if (!template) {\n        throw Boom.notFound(`Template ${ctx.params.type}:${ctx.params.name} not found`);\n      }\n      record = record || new Record(stampRecord(template), template);\n\n      try {\n        const { content, metadata, isDelete } = await _content(template, record, ((ctx.request as any).body || {}) as Json, (ctx.request as any).files as ReadStream[]);\n\n        if (record && isDelete) {\n          await this.provider.deleteRecord(record.id);\n          ctx.flash('success', `Deleted ${record.nameSingular}`);\n          (template.type === 'page') ? ctx.redirect('/dashboard') : ctx.redirect(`/dashboard/${template.type}${template.name}`);\n          return;\n        }\n\n        if (type === PageType.COLLECTION && record?.template.type !== type) {\n          record = await this.provider.updateRecord({\n            ...record,\n            content,\n            metadata,\n            parentId: record?.id || null,\n          });\n\n          console.log('RECORD', record);\n\n          // If the template is sortable, append the record\n          if (template.sortable) {\n            await updateRecordPosition(this.provider, record);\n          }\n\n          ctx.flash('success', `Created ${record.nameSingular()}`);\n        }\n        else {\n          record = await this.provider.updateRecord({ ...record, content, metadata })\n          ctx.flash('success', `Updated ${record.nameSingular()}`);\n        }\n\n        console.log('WAT', record, record.permalink());\n\n        const name = template.type !== 'settings' ? record.permalink() : `/${template.name}`;\n        return ctx.redirect(`/dashboard/${template.type}${name}`);\n      } catch (err) {\n        console.error('erro', err);\n        if (err.name === 'SequelizeValidationError' || err.name === 'SequelizeUniqueConstraintError') {\n          ctx.flash('error', 'Please fix the following errors, then resubmit.');\n          // await _editRecordAction(ctx, record.toJSON(), err.errors);\n        } else {\n          throw err;\n        }\n      }\n    });\n\n    router.get('sections#index', '/:type/(.*)', async (ctx, errors) => {\n      let slug = ctx.params[0] || 'index';\n      if (slug.endsWith('/')) { slug = slug.slice(0, -1); }\n      if (slug === '' || slug === '/') { slug = 'index'; }\n\n      const type = ctx.params.type as PageType;\n      const record = slug ? await getRecordFromPath(slug, this.provider) : null;\n      let template = record ? await this.provider.getTemplateById(record.templateId) : await this.provider.getTemplateByName(slug, type);\n      template = template ? await this.provider.getTemplateByName(template.name, type) : null;\n\n      if (!template) {\n        throw Boom.notFound(`Template ${ctx.params.type}:${ctx.params.name} not found`);\n      }\n\n      ctx.state.template = template.toJSON();\n      ctx.state.record = record?.toJSON() || null;\n\n      // If this is the type of template that contain multiple records, render the records list page.\n      if (type === 'collection' && (!record || !record?.template.isCollection())) {\n        const tableAction = template.sortable ? 'draggable' : 'sortable';\n        const records = (await this.provider.getRecordsByTemplateId(template.id)).map(r => r.toJSON());\n        return ctx.render('records/index', template.label(), {\n          page: (await this.provider.getTemplateByName(template.name, PageType.PAGE))?.toJSON() as unknown as Json,\n          collection: (await this.provider.getTemplateByName(template.name, PageType.COLLECTION))?.toJSON() as unknown as Json,\n          pageRecord: (record?.toJSON() || null) as unknown as Json,\n          record: null,\n          template: template.toJSON() as unknown as Json,\n          tableAction,\n          records: records as unknown as Json,\n          csrf: ctx.csrf || '',\n          Form: Form as unknown as Json,\n          errors: _errors(errors as unknown as Error[]),\n          previewContent: (((record: IRecord, fieldName: string, section: ITemplate) => {\n            const directive = directives.find(section.fields[fieldName]);\n            /* @ts-ignore */\n            const rendered = directive.preview(record.content[fieldName]);\n            return rendered && rendered.length > 140 ? `${rendered.slice(0, 140)}...` : rendered;\n          }) as unknown) as number\n        });\n      }\n\n      // If there are no records created for this template type yet, render the new record page.\n      if (!record) {\n        // @ts-ignore\n        return ctx.redirect(router.url('records#new', template.type, template.name));\n      }\n\n      const pageRecord = type === PageType.PAGE ? record : (record.parentId ? await this.provider.getRecordById(record.parentId) : null);\n\n      // Else, this is a single-record type of template. Render the edit page.\n      return _editRecordAction(\n        ctx,\n        type,\n        pageRecord,\n        template,\n        record,\n      );\n    });\n\n    async function _content(template: Template, record: Record | null, body: Json, files: ReadStream[]) {\n      const metadataFields = ['name', 'slug', 'title', 'description', 'redirectUrl'];\n      const allowedFields = new Set(Object.keys(template.fields));\n      const promises = [];\n\n      const content = Object.assign({}, record?.content || {});\n      // Only make allowed fields available.\n      if (body.content) {\n        for (const field of allowedFields) {\n          content[field] = body.content[field];\n        }\n      }\n\n      const metadata = Object.assign({}, record?.metadata || {});\n      // Only make allowed fields available.\n      if (body.metadata) {\n        for (const field of metadataFields) {\n          metadata[field] = body.metadata[field] || null;\n        }\n      }\n\n      // Pre-processing the slug here instead of just in the SQL hook helps with database cache busting.\n      if (metadata.slug) {\n        metadata.slug = `${metadata.slug || ''}`.replace(/^\\/+/, '');\n      }\n\n      // Save files\n      for (const file of files) {\n        const fieldName = (file as any).fieldname.match(/content\\[(.*)\\]/)[1];\n        if (allowedFields.has(fieldName)) {\n          promises.push(_saveFile(file).then((c) => { content[fieldName] = c; }));\n        }\n      }\n\n      await Promise.all(promises);\n\n      // Process destroys\n      for (const fieldName of Object.keys(body._destroy || {})) {\n        delete content[fieldName];\n      }\n\n      return { content, metadata, isDelete: body._delete === 'true' };\n    }\n\n    const _saveFile = async (file: ReadStream) => {\n      const fileName = _fileDigest(file);\n      const savePath = resolve(this.options.uploadsDir, fileName);\n      const buffer = readFileSync(file.path);\n\n      // TODO: Ensure that EXIF rotated images are oriented correctly\n      writeFileSync(savePath, buffer, { encoding: 'binary' });\n\n      return fileName;\n    }\n\n    function _fileDigest(file: ReadStream) {\n      const hash = checksum(file.path.toString(), () => {});\n      const { name, ext } = parse((file as any).filename);\n\n      return `${toSnakeCase(name)}-${hash}${ext}`;\n    }\n\n  }\n\n\n  /**\n   * Returns routes\n   */\n  get routes() {\n    return this.router.routes();\n  }\n}\n"]}