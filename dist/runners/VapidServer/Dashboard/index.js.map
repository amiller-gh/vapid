{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/runners/VapidServer/Dashboard/index.ts"],"names":[],"mappings":"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","sourcesContent":["import checksum from 'md5-file';\nimport * as pluralize from 'pluralize';\nimport { toSnakeCase, Json } from '@universe/util';\n\nimport { Paths } from '../../../utils';\n\nimport { join, parse, resolve } from 'path';\nimport assert from 'assert';\nimport url from 'url';\nimport { readFileSync, writeFileSync, ReadStream } from 'fs';\n\nimport { deploy, makePublic } from '@cannery/hoist';\nimport Boom from '@hapi/boom';\nimport Koa from 'koa';\n\nimport bodyParser from 'koa-bodyparser';\nimport multipartParser from 'koa-busboy';\nimport views from 'koa-views';\nimport Router from 'koa-router';\nimport { getRecordFromPath } from '../../../utils/paths';\nimport { Record } from '../../../Database/models/Record';\nimport { PageType, Template } from '../../../Database/models/Template';\n\n\n// import services from '../../../services';\nimport VapidBuilder from '../../VapidBuilder';\nimport middleware from '../middleware';\nimport Database from '../../../Database';\nimport { IProvider } from '../../../Database/providers';\n\nimport Form from '../../../form';\n\ninterface IKoaContext {\n  csrf: string | undefined,\n  flash: (type: 'success' | 'error' | 'warning', message: string) => void;\n  render: (relPath: string, title: string, locals?: Json) => Promise<void>;\n  pages: Record[];\n}\n\n// TODO: Don't use module globals.\ninterface DashboardOptions {\n  local: boolean;\n  uploadsDir: string;\n  siteName: string;\n  sitePaths: { root: string; };\n  liveReload: boolean;\n  provider: IProvider;\n  db: Database;\n}\n\n/**\n * Dashboard\n * Server routes for authenticating, installing, and managing content\n */\nexport default class Dashboard {\n\n  private db: Database;\n  private provider: IProvider;\n  private router = new Router<any, IKoaContext>({ prefix: '/dashboard' });\n  private options: DashboardOptions;\n  public paths = Paths.getDashboardPaths();\n\n  /**\n   * @param {Object} sharedVars - variables shared by Vapid class\n   *\n   * @todo Maybe there's a more standard way of sharing with koa-router classes?\n   */\n  constructor(opts: DashboardOptions) {\n    this.options = opts;\n    this.db = opts.db;\n    this.provider = opts.provider;\n    const router = this.router;\n    const paths = this.paths;\n\n    /*\n    * BEFORE ACTIONS\n    */\n   const defaultSection = async (ctx: Koa.Context, next: () => void) => {\n    ctx.state.record = await this.provider.getIndex() || await this.provider.getGeneral();\n    ctx.state.template = ctx.state.record.template;\n    await next();\n  }\n\n  const findPage = async (ctx: Koa.Context, next: () => void) => {\n    const permalink = ctx.params[0].split('/').filter(Boolean).join('/');\n    console.log(permalink)\n    const record = await getRecordFromPath(permalink, this.provider);\n    if (record) {\n      ctx.state.template = record.template;\n      ctx.state.record = record;\n      await next();\n    } else {\n      throw Boom.notFound(`Template ${ctx.params.type}:${ctx.params.name} not found`);\n    }\n  }\n\n  const findSection = async (ctx: Koa.Context, next: () => void) => {\n    const type = pluralize.singular(ctx.params.type);\n    const { name } = ctx.params;\n    const template = await this.provider.getTemplateByName(name, type as PageType);\n\n    if (template) {\n      // TODO: This seems to be the only way to get the defaultScope/ordering to work\n      const records = await this.provider.getRecordsByTemplateId(template.id);\n      (template as any).records = records;\n      ctx.state.template = template;\n      await next();\n    } else {\n      throw Boom.notFound(`Template ${ctx.params.type}:${ctx.params.name} not found`);\n    }\n  }\n\n  const findRecord = async (ctx: Koa.Context, next: () => void) => {\n    const record = await this.provider.getRecordById(ctx.params.id);\n\n    if (record) {\n      ctx.state.record = record;\n      ctx.state.template = record.template;\n      await next();\n    } else {\n      throw Boom.notFound(`Record ${ctx.params.type}:${ctx.params.name}:${ctx.params.id} not found`);\n    }\n  }\n\n  const _newRecordAction = async (ctx: Koa.Context, options: { title?: string } = {}, errors: Error[]) => {\n    const body: { content?: Json; metadata?: Json } = (ctx.request as any).body;\n    let { template, record } = ctx.state;\n    record = record || await this.provider.updateRecord({\n      id: -1,\n      content: body.content || {},\n      metadata: body.metadata || {},\n      templateId: template.id,\n      position: 0,\n      slug: '',\n      createdAt: Date.now(),\n      updatedAt: Date.now(),\n    });\n\n    const title = options.title || template.type === 'setting'\n      ? template.labelSingular\n      : `New ${template.labelSingular} ${template.type === 'page' ? 'Page' : ''}`;\n\n    await ctx.render('records/edit', title, {\n      isNewRecord: true,\n      collection: (await this.provider.getTemplateByName(template.name, PageType.COLLECTION))?.toJSON(),\n      page: (await this.provider.getTemplateByName(template.name, PageType.PAGE))?.toJSON(),\n      template: template?.toJSON(),\n      record: record?.toJSON(),\n      action: router.url('records#create', template.typePlural, template.name),\n      errors: Array.isArray(errors) ? _errors(errors) : undefined,\n      Form,\n      ...options,\n    });\n  }\n\n  const _editRecordAction = async (ctx: Koa.Context, record: Record, errors = []) => {\n    const { template } = ctx.state;\n    await ctx.render('records/edit', template.type === 'page' ? record.name() : record.nameSingular(), {\n      isNewRecord: false,\n      collection: (await this.provider.getTemplateByName(template.name, PageType.COLLECTION))?.toJSON(),\n      page: (await this.provider.getTemplateByName(template.name, PageType.PAGE))?.toJSON(),\n      template: template?.toJSON(),\n      record: record?.toJSON(),\n      action: router.url('records#update', { type: template.typePlural, name: template.name, id: record.id || '0' }),\n      deletePath: router.url('records#delete',  { type: template.typePlural, name: template.name, id: record.id || '0' }),\n      errors: _errors(errors),\n      Form,\n    });\n  }\n\n  function _errors(errorObjects: Error[] | Error = []): Json {\n    const errorItems = Array.isArray(errorObjects) ? errorObjects : [errorObjects];\n    const errors = errorItems.reduce((memo, item) => {\n      const value = ((str) => {\n        try {\n          return JSON.parse(str);\n        } catch (err) {\n          return str;\n        }\n      })(item.message);\n\n      /* eslint-disable-next-line no-param-reassign */\n      memo[(item as any).path] = value;\n      return memo;\n    }, {});\n\n    return errors;\n  }\n\n    /*\n    * MIDDLEWARES\n    */\n    router\n      .use(middleware.redirect)\n      .use(bodyParser({}))\n      .use(multipartParser())\n      .use(middleware.flash)\n      .use(middleware.csrf)\n\n    router.use(views(paths.views, {\n      extension: 'ejs',\n      map: {\n        html: 'ejs',\n      },\n    }));\n\n    // TODO: Remove this hack, and create custom views-like middleware\n    this.router.use(async (ctx, next) => {\n      // Override ctx.render to accept layouts, and add common locals\n      const { render } = ctx;\n\n      ctx.render = async (relPath, title, locals = {}) => {\n        const layout = relPath.startsWith('auth/') ? 'auth' : 'default';\n\n        Object.assign(locals, {\n          yield: relPath,\n          title,\n          csrf: ctx.csrf,\n          flash: (ctx.flash as unknown as () => void)(),\n          requestURL: ctx.request.url,\n          siteName: this.options.siteName,\n          liveReload: this.options.liveReload,\n        });\n\n        await (render as unknown as (path: string, ctx: Json) => Promise<void>)(`layouts/${layout}`, locals);\n      };\n\n      await next();\n    });\n\n    /*\n    * ROOT\n    */\n\n    this.router.get('root', '/', defaultSection, async (ctx) => {\n      console.log(ctx.state.template);\n      ctx.redirect(router.url('sections#index', { type: ctx.state.template.typePlural(), name: ctx.state.template.name }));\n    });\n\n    this.router.use(async (ctx, next) => {\n      // For the nav menu\n      ctx.state.settings = await this.provider.getTemplatesByType(PageType.SETTINGS);\n\n      // Get all page records.\n      const pages = [...await this.provider.getRecordsByType(PageType.PAGE)].map(p => p.toJSON());\n\n      const collections = await this.provider.getTemplatesByType(PageType.COLLECTION);\n\n      ctx.state.pages = pages;\n      ctx.state.collections = collections.map(c => c.toJSON());\n      ctx.state.showBuild = this.options.local;\n      ctx.state.needsBuild = this.db.isDirty();\n      await next();\n    });\n\n    /*\n    * Deploy\n    */\n    router.get('deploy', '/deploy', async (ctx) => {\n      const staticBuildPath = join(this.options.sitePaths.root, 'dist');\n      const builder = new VapidBuilder(this.options.sitePaths.root);\n      try {\n        await builder.build(staticBuildPath);\n      } catch (err) {\n        console.error(err);\n        throw err;\n      }\n      const siteUrl = await deploy(staticBuildPath, undefined, undefined, console, false);\n      console.log('site url', siteUrl);\n      await makePublic(staticBuildPath);\n      ctx.redirect(siteUrl);\n    });\n\n    /*\n    * BUILD\n    */\n    router.get('build', '/build', async (ctx) => {\n    await this.db.rebuild();\n\n    // TODO: Not nuts about hard-coding paths here\n    const redirectTo = await (async () => {\n      try {\n        const referer = ctx.get('Referrer');\n        const matches = referer ? url.parse(referer)?.path?.match(/\\/dashboard\\/(records|templates)\\/(\\d+)/) : null;\n        if (!matches || !matches.length) {\n          return router.url('root', {});\n        }\n        const models = { records: Record, templates: Template };\n        await models[matches[1]].findByPk(matches[2], { rejectOnEmpty: true });\n        return 'back';\n      } catch (err) {\n        return router.url('root', {});\n      }\n    })();\n\n    ctx.flash('success', 'Site build complete');\n    ctx.redirect(redirectTo, router.url('root', {}));\n    });\n\n    /*\n    * RECORDS\n    */\n\n    router.get('records#new', '/:type/:name/records/new', findSection, async (ctx) => {\n      await _newRecordAction(ctx, {}, []);\n    });\n\n    router.get('collection#view', '/:type/:name/records/:id', findRecord, async (ctx) => {\n      return _editRecordAction(ctx, ctx.state.record);\n    });\n\n    // TODO: Re-add Re-ordering.\n    router.post('records#reorder', '/records/reorder', async (ctx) => {\n      // const { id, from, to, nav } = ctx.request.body;\n      // const record = await this.provider.getRecordById(id);\n      // await new services.RecordPositionUpdater(record, from, to, nav).perform(db);\n      ctx.status = 200;\n    });\n\n    router.post('records#create', '/:type/:name/records', findSection, async (ctx) => {\n      const template = ctx.state.template as Template;\n      let record;\n\n      try {\n        const { content, metadata } = await _content(ctx);\n        record = await this.provider.updateRecord({\n          id: -1,\n          position: 0,\n          slug: '',\n          content,\n          metadata,\n          templateId: template.id,\n          createdAt: Date.now(),\n          updatedAt: Date.now(),\n        });\n        ctx.state.record = record;\n\n        // If the template is sortable, append the record\n        if (template.sortable) {\n          // await new services.RecordPositionUpdater(record).perform();\n        }\n\n        ctx.flash('success', `Created ${record.nameSingular}`);\n        const name = template.type === 'page' ? record.safeSlug() : template.name;\n        return ctx.redirect(router.url('sections#index', { type: template.typePlural(), name }));\n      } catch (err) {\n        console.error(err);\n        if (err.name === 'SequelizeValidationError' || err.name === 'SequelizeUniqueConstraintError') {\n          ctx.flash('error', 'Please fix the following errors, then resubmit.');\n          await _newRecordAction(ctx, {}, err.errors);\n        } else {\n          throw err;\n        }\n      }\n    });\n\n    router.post('records#update', '/:type/:name/records/:id', findRecord, async (ctx) => {\n      const { record } = ctx.state;\n      try {\n        const { template } = record as Record;\n        const { content, metadata } = await _content(ctx);\n\n        // If new record is not equal to the old one, update the record in our DB.\n        try {\n          assert.deepStrictEqual(record.content, content);\n          assert.deepStrictEqual(record.metadata, metadata);\n        } catch (_err) {\n          await record.update({ content, metadata });\n          ctx.flash('success', `Updated ${record.nameSingular}`);\n        }\n\n        if (template.type !== 'page') {\n          ctx.redirect(router.url('sections#index', { type: template.typePlural(), name: template.name }));\n        } else {\n          ctx.redirect(router.url('sections#index', { type: template.typePlural(), name: record.safeSlug() }));\n        }\n      } catch (err) {\n        if (err.name === 'SequelizeValidationError' || err.name === 'SequelizeUniqueConstraintError') {\n          ctx.flash('error', 'Please fix the following errors, then resubmit.');\n          await _editRecordAction(ctx, record, err.errors);\n        } else {\n          throw err;\n        }\n      }\n    });\n\n    router.post('image#upload', '/upload', async (ctx) => {\n      const files: ReadStream[] = (ctx.request as unknown as any).files as ReadStream[] || [];\n      if (files.length > 1) {\n        ctx.status = 400;\n        ctx.body = {\n          status: 'error',\n          message: 'One file at a time.',\n        };\n        return;\n      }\n\n      const fileUrl = await _saveFile(files[0]);\n      ctx.status = 200;\n      ctx.body = {\n        status: 'success',\n        data: { url: `/uploads/${fileUrl}` },\n      };\n      });\n\n      router.get('records#delete', '/:type/:name/records/:id/delete', findRecord, async (ctx) => {\n      const title = ctx.state.template.labelSingular;\n      await ctx.render('records/delete', `Delete ${title}`);\n      });\n\n      router.post('/:type/:name/records/:id/delete', findRecord, async (ctx) => {\n      await ctx.state.record.destroy();\n      ctx.flash('success', `Deleted ${ctx.state.record.nameSingular}`);\n      if (ctx.state.template.type === 'page') {\n        ctx.redirect('/dashboard');\n      } else {\n        ctx.redirect(router.url('sections#index', { type: ctx.state.template.typePlural(), name: ctx.state.template.name }));\n      }\n    });\n\n    /*\n    * GROUPS\n    */\n\n    router.get('sections#pages', '/pages', async (ctx) => {\n      // Else, this is a single-record type of template. Render the edit page.\n      const templates = [];\n      for (const t of await this.provider.getTemplatesByType(PageType.PAGE)) {\n        templates.push(t);\n      }\n      return ctx.render('records/templates', 'New Page', { templates } as unknown as Json);\n      });\n\n      router.get('sections#page', '/pages/(.*)', findPage, async (ctx) => {\n      const { record } = ctx.state;\n\n      // Else, this is a single-record type of template. Render the edit page.\n      return _editRecordAction(ctx, record);\n      });\n\n      router.get('sections#index', '/:type/:name', findSection, async (ctx, errors) => {\n      const { template } = ctx.state;\n      // If there are no records created for this template type yet, render the new record page.\n      if (template.records.length === 0) {\n        return ctx.redirect(router.url('records#new', template.typePlural, template.name));\n\n      // If this is the type of template that contain multiple records, render the records list page.\n      } else if (template.type === 'collection') {\n        const tableAction = ctx.state.template.sortable ? 'draggable' : 'sortable';\n        return ctx.render('records/index', ctx.state.template.label, {\n          collection: (await this.provider.getTemplateByName(template.name, PageType.COLLECTION))?.toJSON() as unknown as Json,\n          page: (await this.provider.getTemplateByName(template.name, PageType.PAGE))?.toJSON() as unknown as Json,\n          tableAction,\n          csrf: ctx.csrf || '',\n          Form: Form as unknown as Json,\n          errors: Array.isArray(errors) ? _errors(errors as unknown as Error[]) : null,\n        });\n      }\n\n      // Else, this is a single-record type of template. Render the edit page.\n      return _editRecordAction(ctx, template.records[0]);\n    });\n\n    async function _content(ctx: Koa.Context) {\n      const metadataFields = ['name', 'slug', 'title', 'description', 'redirectUrl'];\n      const body: Json = (ctx.request as any).body;\n      const allowedFields = new Set(Object.keys(ctx.state.template.fields));\n      const promises = [];\n\n      const content = ctx.state.record ? Object.assign({}, ctx.state.record.content || {}) : {};\n      // Only make allowed fields available.\n      if (body.content) {\n        for (const field of allowedFields) {\n          content[field] = body.content[field];\n        }\n      }\n\n      const metadata = ctx.state.record ? Object.assign({}, ctx.state.record.metadata || {}) : {};\n      // Only make allowed fields available.\n      if (body.metadata) {\n        for (const field of metadataFields) {\n          metadata[field] = body.metadata[field] || null;\n        }\n      }\n\n      // Pre-processing the slug here instead of just in the SQL hook helps with database cache busting.\n      if (metadata.slug) {\n        metadata.slug = metadata.slug.replace(/^\\/+/, '');\n      }\n\n      // Save files\n      for (const file of (ctx.request as any).files as ReadStream[]) {\n        const fieldName = (file as any).fieldname.match(/content\\[(.*)\\]/)[1];\n        if (allowedFields.has(fieldName)) {\n          promises.push(_saveFile(file).then((c) => { content[fieldName] = c; }));\n        }\n      }\n\n      await Promise.all(promises);\n\n      // Process destroys\n      for (const fieldName of Object.keys(body._destroy || {})) {\n        delete content[fieldName];\n      }\n\n      return { content, metadata };\n    }\n\n    const _saveFile = async (file: ReadStream) => {\n      const fileName = _fileDigest(file);\n      const savePath = resolve(this.options.uploadsDir, fileName);\n      const buffer = readFileSync(file.path);\n\n      // TODO: Ensure that EXIF rotated images are oriented correctly\n      writeFileSync(savePath, buffer, { encoding: 'binary' });\n\n      return fileName;\n    }\n\n    function _fileDigest(file: ReadStream) {\n      const hash = checksum(file.path.toString(), () => {});\n      const { name, ext } = parse((file as any).filename);\n\n      return `${toSnakeCase(name)}-${hash}${ext}`;\n    }\n\n  }\n\n\n  /**\n   * Returns routes\n   */\n  get routes() {\n    return this.router.routes();\n  }\n}\n"]}