{"version":3,"file":"webpack.js","sourceRoot":"","sources":["../../../../lib/runners/VapidServer/middleware/webpack.ts"],"names":[],"mappings":";;;;;AAAA,6EAA6C;AAC7C,8DAAqC;AAErC;;;;;;GAMG;AACH,SAAwB,SAAS,CAAC,KAAc,EAAE,YAAsB,EAAE,EAAE,aAAuB,EAAE,EAAE,SAAkB,KAAK;IAC5H,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC;IAElD,OAAO,qBAAU,CAAC;QAChB,GAAG,EAAE;YACH,QAAQ,EAAE,OAAO;YACjB,UAAU,EAAE,GAAG;SAChB;QAED,GAAG,EAAE,KAAK;QAEV,MAAM,EAAE,wBAAM,CAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC;KACpD,CAAC,CAAC;AACL,CAAC;AAbD,4BAaC;AAAA,CAAC","sourcesContent":["import config from '../../../webpack_config';\nimport middleware from 'koa-webpack';\n\n/**\n * Initialize Webpack middleware\n *\n * @params {string} local - is this a local dev environment\n * @params {string} siteDir - path to website being served\n * @return {function}\n */\nexport default function webpacker(local: boolean, assetDirs: string[] = [], moduleDirs: string[] = [], output: boolean = false) {\n  const mode = local ? 'development' : 'production';\n\n  return middleware({\n    dev: {\n      logLevel: 'error',\n      publicPath: '/',\n    },\n\n    hot: false,\n\n    config: config(mode, assetDirs, moduleDirs, output),\n  });\n};\n"]}