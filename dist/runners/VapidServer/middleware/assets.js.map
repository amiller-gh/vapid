{"version":3,"file":"assets.js","sourceRoot":"","sources":["../../../../lib/runners/VapidServer/middleware/assets.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,sDAA8B;AAC9B,0DAA8B;AAC9B,4DAA+B;AAG/B,0CAAuC;AAEvC;;;;;;;;GAQG;AACH,SAAwB,MAAM,CAAC,IAAY,EAAE,MAAM,GAAG,GAAG;IACvD,OAAO,CAAO,GAAgB,EAAE,IAAc,EAAE,EAAE;QAChD,MAAM,IAAI,GAAG,aAAK,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEzC,mDAAmD;QACnD,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAAE,MAAM,cAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAAE;QAE5D,wCAAwC;QACxC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAK,CAAC,MAAM,EAAE,oBAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAChE,CAAC,CAAA,CAAC;AACJ,CAAC;AAVD,yBAUC;AAAA,CAAC","sourcesContent":["import Boom from '@hapi/boom';\nimport mount from 'koa-mount';\nimport serve from 'koa-static';\nimport Koa from 'koa';\n\nimport { Paths } from '../../../utils';\n\n/**\n * Looks for static assets\n *\n * @params {string} path\n * @params {string} [prefix='/'] mount path\n * @return {function}\n *\n * @throws {Boom.notFound}\n */\nexport default function assets(path: string, prefix = '/') {\n  return async (ctx: Koa.Context, next: () => {}) => {\n    const stat = Paths.isAssetPath(ctx.path);\n\n    // If it returns an error message, throw the error.\n    if (typeof stat === 'string') { throw Boom.notFound(stat); }\n\n    // Otherwise, serve or skip accordingly.\n    await (stat ? mount(prefix, serve(path))(ctx, next) : next());\n  };\n};\n"]}