{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/runners/VapidServer/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as http from 'http';\n\nimport Koa from 'koa';\n\nimport Dashboard from './Dashboard';\nimport middleware from './middleware';\nimport { renderContent, renderError } from '../../Renderer';\nimport { toTitleCase } from '@universe/util';\nimport Watcher from './watcher';\nimport Vapid from '../Vapid';\n\nconst app = new Koa();\nconst cache = new Map();\n\n/**\n * This is the Vapid development server.\n * The `VapidServer` class extends the base `Vapid` project class\n * to provide a developer server that enables easy site development\n * and content creation through the admin dashboard.\n */\nexport default class VapidServer extends Vapid {\n  server: http.Server | null = null;\n  watcher: Watcher | null = null;\n  dashboard: Dashboard;\n  liveReload: boolean;\n  buildOnStart: boolean;\n\n  /**\n   * This module works in conjunction with a site directory.\n   *\n   * @param {string} cwd - path to site\n   * @return {Vapid}\n   */\n  constructor(cwd: string) {\n    super(cwd);\n\n    this.watcher = this.isDev ? new Watcher(this.paths.www) : null;\n    this.liveReload = !!(this.watcher && this.config.liveReload);\n    this.buildOnStart = !this.isDev;\n\n    // Share with dashboard\n    const dashboard = this.dashboard = new Dashboard({\n      local: this.isDev,\n      db: this.database,\n      provider: this.provider,\n      uploadsDir: this.paths.uploads,\n      siteName: toTitleCase(this.name),\n      sitePaths: this.paths,\n      liveReload: this.liveReload,\n    });\n\n    // Set secret key\n    app.keys = [process.env.SECRET_KEY!];\n\n    // Errors\n    app.use(async (ctx, next) => {\n      try {\n        await next();\n      } catch (err) {\n        [ctx.status, ctx.body] = renderError.call(this, err, ctx.request);\n\n        if (this.liveReload) { _injectLiveReload(ctx, this.config.port); }\n      }\n    });\n\n    // Middleware\n    app.use(middleware.security)\n      .use(middleware.session(app))\n      .use(middleware.webpack(this.isDev, [dashboard.paths.assets, this.paths.www], [this.paths.modules]))\n      .use(middleware.imageProcessing(this.paths))\n      .use(middleware.assets(this.paths.uploads, '/uploads'))\n      .use(middleware.privateFiles)\n      .use(middleware.assets(this.paths.www))\n      .use(middleware.assets(dashboard.paths.assets))\n      .use(middleware.favicon([this.paths.www, dashboard.paths.assets]))\n      .use(middleware.logs)\n      .use(dashboard.routes);\n\n    // Main route\n    app.use(async (ctx) => {\n      const cacheKey = ctx.path;\n\n      ctx.body = this.config.cache\n        ? cache.get(cacheKey) || cache.set(cacheKey, await renderContent.call(this, ctx.path))\n        : await renderContent.call(this, ctx.path);\n\n      if (this.liveReload) { _injectLiveReload(ctx, this.config.port); }\n    });\n  }\n\n  /**\n   * Starts core services (db, watcher, web server)\n   * and registers callbacks\n   *\n   * @listens {server}\n   * @listens {watcher}\n   * @listens {Record.addHooks}\n   */\n  async start() {\n    cache.clear();\n    this.server = http.createServer(app.callback());\n\n    await this.database.start();\n\n    // Build if necessary\n    await this.database.rebuild();\n\n    // If watcher is present, attach its WebSocket server\n    // and register the callback\n    if (this.watcher) {\n      const watcherOptions = {\n        liveReload: this.liveReload,\n        server: this.server,\n        port: this.config.port,\n      };\n\n      this.watcher.listen(watcherOptions, () => {\n        cache.clear();\n        if (this.database.isDirty()) {\n          this.watcher?.broadcast({ command: 'dirty' });\n        }\n      });\n    } else {\n      this.server.listen(this.config.port);\n    }\n\n    // Clear the cache, and liveReload (optional), when DB changes\n    this.database.on('rebuild',  () => {\n      cache.clear();\n      if (this.liveReload) { this.watcher?.refresh(); }\n    });\n  }\n\n  /**\n   * Safely stops the services\n   */\n  stop() {\n    if (this.server) { this.server.close(); }\n    this.database.stop();\n  }\n}\n\n/**\n * @private\n *\n * Injects LiveReload script into HTML\n *\n * @param {Object} ctx\n * @param {number} port - server port number\n */\nfunction _injectLiveReload(ctx: Koa.Context, port: number) {\n  const { hostname } = ctx.request;\n  const wsPort = _websocketPort(ctx, port);\n  const script = `<script src=\"/dashboard/javascripts/livereload.js?snipver=1&port=${wsPort}&host=${hostname}\"></script>`;\n\n  ctx.body = (ctx.body as string).replace(/(<\\/body>(?![\\s\\S]*<\\/body>[\\s\\S]*$))/i, `${script}\\n$1`);\n}\n\n/**\n * @private\n *\n * Hack to help determine Glitch WebSocket port\n *\n * @param {Object} ctx\n * @param {number} port - server port number\n * @return {number} WebSocket port number\n */\nfunction _websocketPort(ctx: Koa.Context, port: number) {\n  const forwarded = ctx.header['x-forwarded-proto'];\n  const protocol = forwarded ? (forwarded as string).split(',')[0] : undefined;\n  return protocol === 'https' ? 443 : port;\n}\n"]}