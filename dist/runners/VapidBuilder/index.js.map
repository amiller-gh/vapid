{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/runners/VapidBuilder/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport { GlobSync } from 'glob';\nimport webpack from 'webpack';\nimport * as mkdirp from 'mkdirp';\n\nimport { Template } from '../../Database/models/Template';\nimport { renderContent } from '../../Renderer';\nimport { Logger, Paths } from '../../utils';\nimport makeWebpackConfig from '../../webpack_config';\nimport Vapid from '../Vapid';\n\n/**\n * This is the Vapid static site builder.\n * The `VapidBuilder` class extends the base `Vapid` project class\n * to enable static site builds. Its single method, `build(dest)`\n * will output compiled static HTML files and static assets\n * for every page and record.\n */\nexport default class VapidBuilder extends Vapid {\n  /**\n   * Runs a static build of the Vapid site and builds to the `dest` directory.\n   * and registers callbacks\n   * TODO: Handle favicons.\n   *\n   * @param {string}  dest â€“ the build destination directory.\n   */\n  async build(dest: string) {\n    if (!path.isAbsolute(dest)) {\n      throw new Error('Vapid build must be called with an absolute destination path.');\n    }\n\n    // Fetch our webpack config.\n    const webpackConfig = makeWebpackConfig(\n      this.isDev ? 'development' : 'production',\n      [this.paths.www],\n      [this.paths.modules],\n    );\n\n    // Ensure we have a destination directory and point webpack to it.\n    mkdirp.sync(dest);\n    webpackConfig.output.path = dest;\n\n    // Run the webpack build for CSS and JS bundles.\n    Logger.info('Running Webpack Build');\n    const stats = await new Promise((resolve, reject) => {\n      webpack(webpackConfig as webpack.Configuration, (err: Error, dat: any) => {\n        if (err) reject(err);\n        else resolve(dat);\n      });\n    });\n\n    // Move all uploads to dest directory.\n    Logger.info('Moving Uploads Directory');\n    const uploadsOut = path.join(dest, 'uploads');\n    const uploads = new GlobSync(path.join(this.paths.uploads, '**/*'));\n    mkdirp.sync(uploadsOut);\n\n    // Move all assets in /uploads to dest uploads directory\n    /* eslint-disable-next-line no-restricted-syntax */\n    for (const upload of uploads.found) {\n      if (!Paths.isAssetPath(upload)) { continue; }\n      fs.copyFileSync(\n        upload,\n        path.join(dest, 'uploads', path.relative(this.paths.uploads, upload)),\n      );\n    }\n\n    // Copy all public static assets to the dest directory.\n    Logger.info('Copying Static Assets');\n    const assets = new GlobSync(path.join(this.paths.www, '**/*'));\n    /* eslint-disable-next-line no-restricted-syntax */\n    for (const asset of assets.found) {\n      const isAsset = Paths.isAssetPath(asset);\n      if (isAsset === false || typeof isAsset === 'string') { continue; }\n      try { Paths.assertPublicPath(asset); } catch (err) { continue; }\n      const out = path.join(dest, path.relative(this.paths.www, asset));\n      mkdirp.sync(path.dirname(out));\n      fs.copyFileSync(asset, out);\n    }\n\n    // Copy discovered favicon over.\n    function findFirst(name: string, paths: string[] = []) {\n      for (const p of paths) {\n        const filePath = path.join(p, name);\n        if (fs.existsSync(filePath)) { return filePath; }\n      }\n      return false;\n    }\n\n    const faviconPath = findFirst('favicon.ico', [this.paths.www, Paths.getDashboardPaths().assets]);\n    if (faviconPath) {\n      fs.copyFileSync(faviconPath, path.join(dest, '/favicon.ico'));\n    }\n\n    Logger.info('Connecting to Database');\n    await this.provider.start();\n\n    // Store all sections in a {[\"type:name\"]: Section} map for easy lookup.\n    const templatesArr = await this.provider.getAllTemplates();\n    const templates = {};\n    for (const template of templatesArr) {\n      templates[Template.identifier(template)] = template;\n    }\n\n    // Fetch all potential template files. These are validated below before compilation.\n    Logger.info('Compiling All Templates');\n    // const htmlFile = await glob(path.join(this.paths.www, '**/*.html'));\n\n    // For every record, in every template...\n    /* eslint-disable no-await-in-loop */\n    for (const template of templatesArr) {\n      if (!template.hasView) { continue; }\n      const records = await this.provider.getRecordsByTemplateId(template.id);\n      for (const record of records) {\n        Logger.extra([`Rendering: ${record.permalink()}`]);\n        await this.renderUrl(dest, record.permalink());\n        Logger.extra([`Created: ${record.permalink()}`]);\n      }\n    }\n\n    Logger.info('Static Site Created!');\n\n    return stats;\n  }\n\n  async renderUrl(out: string, url: string) {\n    const body = await renderContent.call(this, url);\n    const selfDir = path.join(out, url);\n    mkdirp.sync(path.dirname(selfDir));\n\n    // If an HTML file exists with our parent directory's name, move it in this directory as the index file.\n    if (fs.existsSync(`${path.dirname(selfDir)}.html`)) {\n      fs.renameSync(`${path.dirname(selfDir)}.html`, `${path.dirname(selfDir)}/index.html`);\n    }\n\n    // If a directory already exists here with this HTML file's name, create the index file.\n    if (fs.existsSync(selfDir) && fs.statSync(selfDir).isDirectory) {\n      fs.writeFileSync(`${selfDir}/index.html`, body);\n    }\n\n    // Otherwise, create the HTML file.\n    else {\n      fs.writeFileSync(`${selfDir}.html`, body);\n    }\n  }\n}\n"]}