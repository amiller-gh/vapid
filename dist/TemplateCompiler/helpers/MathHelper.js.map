{"version":3,"file":"MathHelper.js","sourceRoot":"","sources":["../../../lib/TemplateCompiler/helpers/MathHelper.ts"],"names":[],"mappings":";;AAEA,MAAM,EAAE,GAAG;IACT,GAAG,EAAE,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC;IACpC,IAAI,EAAE,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC;IACrC,GAAG,EAAE,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC;IACpC,GAAG,EAAE,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC;IACpC,KAAK,EAAE,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC;IACtC,GAAG,EAAE,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7C,GAAG,EAAE,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7C,IAAI,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACjC,KAAK,EAAE,CAAC,CAAS,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;CACpC,CAAC;AAIF,MAAM,UAAU,GAAmB;IACjC,OAAO,EAAE,KAAK;IACd,QAAQ,EAAE,KAAK;IACf,OAAO,KAAK,OAAO,MAAM,CAAC,CAAC,CAAC;IAC5B,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAa;QAC5B,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IAC/B,CAAC;CACF,CAAA;AAED,kBAAe,UAAU,CAAC","sourcesContent":["import { NeutrinoHelper } from './types';\n\nconst eq = {\n  div: (a: number, b: number) => a / b,\n  mult: (a: number, b: number) => a * b,\n  mod: (a: number, b: number) => a % b,\n  sum: (a: number, b: number) => a + b,\n  minus: (a: number, b: number) => a - b,\n  min: (a: number, b: number) => Math.min(a, b),\n  max: (a: number, b: number) => Math.max(a, b),\n  ceil: (a: number) => Math.ceil(a),\n  floor: (a: number) => Math.floor(a),\n};\n\ntype MathParams = [method: keyof typeof eq , a: number, b: number];\n\nconst MathHelper: NeutrinoHelper = {\n  isField: false,\n  isBranch: false,\n  getType() { return 'math'; },\n  run([method, a, b]: MathParams) {\n    return `${eq[method](a, b)}`;\n  },\n}\n\nexport default MathHelper;"]}