{"version":3,"file":"EachHelper.js","sourceRoot":"","sources":["../../../lib/TemplateCompiler/helpers/EachHelper.ts"],"names":[],"mappings":";;AAEA,oCAAuC;AAEvC,MAAM,UAAU,GAAmB;IACjC,OAAO,EAAE,KAAK;IACd,QAAQ,EAAE,KAAK;IACf,OAAO,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC;IAC1B,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO;;QACtB,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAEpE,0FAA0F;QAC1F,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,CAAA,MAAA,OAAO,CAAC,OAAO,+CAAf,OAAO,CAAY,KAAI,EAAE,CAAC;QAEzD,+BAA+B;QAC/B,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,GAAG,IAAI,MAAA,OAAO,CAAC,KAAK,+CAAb,OAAO,EAAS,CAAC,IAAI,CAAC,EAAE;gBAC3B,KAAK;gBACL,MAAM,EAAE,KAAK,CAAC,MAAM;gBACpB,KAAK,EAAE,KAAK,KAAK,CAAC;gBAClB,IAAI,EAAE,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC;gBAChC,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;gBACtB,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;gBACtB,MAAM,EAAE,IAAI,CAAC,mBAAW,CAAC;aAC1B,CAAC,CAAC;YACL,KAAK,IAAI,CAAC,CAAC;SACZ;QACD,OAAO,GAAG,CAAC;IACb,CAAC;CACF,CAAC;AAEF,kBAAe,UAAU,CAAC","sourcesContent":["import { NeutrinoHelper } from './types';\n\nimport { DATA_SYMBOL } from '../types';\n\nconst EachHelper: NeutrinoHelper = {\n  isField: false,\n  isBranch: false,\n  getType() { return 'eq'; },\n  run(data, _hash, options) {\n    const items = (Array.isArray(data) ? data : [data]).filter(Boolean);\n\n    // If collection is empty, and the helper provides an empty state, render the empty state.\n    if (items.length === 0) return options.inverse?.() || '';\n\n    // Otherwise, render each item!\n    let out = '';\n    let index = 0;\n\n    for (const item of items) {\n      out += options.block?.([item], {\n          index,\n          length: items.length,\n          first: index === 0,\n          last: index === items.length - 1,\n          next: items[index + 1],\n          prev: items[index - 1],\n          record: item[DATA_SYMBOL],\n        });\n      index += 1;\n    }\n    return out;\n  }\n};\n\nexport default EachHelper;"]}