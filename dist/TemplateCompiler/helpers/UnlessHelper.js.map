{"version":3,"file":"UnlessHelper.js","sourceRoot":"","sources":["../../../lib/TemplateCompiler/helpers/UnlessHelper.ts"],"names":[],"mappings":";;;;;AAAA,0DAAkC;AAGlC,MAAM,YAAY,GAAmB;IACnC,OAAO,EAAE,KAAK;IACd,QAAQ,EAAE,KAAK;IACf,OAAO,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC;IAC1B,GAAG,CAAC,KAAK,EAAE,GAAG,IAAI;QAChB,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,IAAI,GAAG,SAAS,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YAAE,SAAS,GAAG,KAAK,CAAC;SAAE;QAC9D,OAAO,kBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,UAAU,KAAK,OAAO,SAAS,CAAC,CAAC,CAAC;CACnC,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import IfHelper from './IfHelper';\nimport { NeutrinoHelper } from './types';\n\nconst UnlessHelper: NeutrinoHelper = {\n  isField: false,\n  isBranch: false,\n  getType() { return null; },\n  run(input, ...args) {\n    let condition = input;\n    if (`${condition}`.startsWith('data:')) { condition = false; }\n    return IfHelper.run.call(this, !condition, ...args);\n  },\n\n  blockParam() { return undefined; }\n};\n\nexport default UnlessHelper;"]}