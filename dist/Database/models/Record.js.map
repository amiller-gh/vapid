{"version":3,"file":"Record.js","sourceRoot":"","sources":["../../../lib/Database/models/Record.ts"],"names":[],"mappings":"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","sourcesContent":["import { Json, toKebabCase, toTitleCase } from \"@universe/util\";\nimport * as pluralize from 'pluralize';\n\nimport { Template } from './Template';\nimport { IProvider } from \"../providers\";\n\nexport interface IRecord {\n  id: number;\n  templateId: number;\n  content: Json;\n  metadata: Json;\n  position: number;\n  slug: string;\n  createdAt: number;\n  updatedAt: number;\n}\n\nexport interface SerializedRecord {\n  id: number;\n  name: string;\n  url: string | null;\n  slug: string | null;\n  isNavigation: boolean;\n  isActive: boolean;\n  title: string | null;\n  description: string | null;\n  redirectUrl: string | null;\n  hasSubNav: boolean;\n  subNav: SerializedRecord[];\n  createdAt: number;\n  updatedAt: number;\n  hasCollection: boolean;\n  template: string;\n};\n\nexport class Record implements IRecord {\n\n  constructor(data: IRecord, template: Template) {\n    this.template = template;\n    this.id = data.id;\n    this.templateId = data.templateId;\n    this.content = data.content;\n    this.metadata = data.metadata;\n    this.position = data.position;\n    this.slug = data.slug;\n    this.createdAt = data.createdAt || Date.now();\n    this.updatedAt = data.updatedAt || Date.now();\n  }\n\n  template: Template;\n  id: number = 0;\n  templateId: number;\n  createdAt: number;\n  updatedAt: number;\n  content: Json;\n  metadata: Json;\n  position: number;\n  slug: string;\n\n  isFirst() {\n    return this.id === 0;\n  }\n\n  defaultName(): string {\n    const defaultName = this.template.name === 'index' ? 'Home' : this.template.name;\n    return this.isFirst() ? defaultName : `${defaultName} ${this.id}`;\n  }\n\n  name(): string {\n    if (this.template.type === 'page') {\n      return toTitleCase(this.metadata.name as string || this.defaultName());\n    }\n    return toTitleCase(this.metadata.name as string || this.slug || this.defaultName());\n  }\n\n  defaultSlug() {\n    const name = toKebabCase(this.content.title as string || this.content.name as string || '');\n    if (this.isFirst() && this.template.name === 'index') { return ''; }\n    // if (this.isFirst && name) { return name; }\n    return `${name || this.template.name}-${this.id}`;\n  }\n\n  safeSlug() {\n    const customSlug = (this.slug || '').replace(`{${this.template.id}}`, '');\n    if (this.isFirst() && this.template.name === 'index') { return 'index'; }\n    return customSlug || this.defaultSlug();\n  }\n\n  /**\n   * URI path to the individual record\n   *\n   * @return {string}\n   */\n  permalink() {\n    const safeSlug = this.safeSlug();\n    let slug = (safeSlug === 'index' || safeSlug === '') ? '' : safeSlug;\n    return this.template.type === 'collection' ? `/${this.template.name}/${slug}` : `/${slug}`;\n  }\n\n  /**\n   * Singularized name\n   *\n   * @return {string}\n   */\n  nameSingular(): string {\n    return pluralize.singular(this.name());\n  }\n\n  async getMetadata(currentUrl: string, provider?: IProvider): Promise<SerializedRecord> {\n    const permalink = this.permalink();\n    const collection = provider ? await provider.getCollectionByName(this.template.name) : null;\n    return {\n      id: this.id,\n      name: this.name(),\n      url: this.template.hasView() ? this.permalink() : null,\n      slug: this.template.hasView() ? this.safeSlug() : null,\n      isNavigation: !!this.metadata.isNavigation,\n      isActive: permalink === '/' ? (permalink === currentUrl || currentUrl === 'index') : currentUrl.indexOf(permalink) === 0,\n      title: this.metadata.title as string || null,\n      description: this.metadata.description as string || null,\n      redirectUrl: this.metadata.redirectUrl as string || null,\n      hasSubNav: !!(collection && collection.records.length && collection.template.hasView()),\n      subNav: await Promise.all(((collection || {}).records || []).map(r => r.getMetadata(currentUrl))),\n      createdAt: this.createdAt,\n      updatedAt: this.updatedAt,\n      hasCollection: !!collection,\n      template: this.template.name,\n    };\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      template: this.template.toJSON(),\n      templateId: this.templateId,\n      content: this.content,\n      metadata: this.metadata,\n      position: this.position,\n      slug: this.slug,\n      isFirst: this.isFirst(),\n      defaultName: this.defaultName(),\n      name: this.name(),\n      defaultSlug: this.defaultSlug(),\n      safeSlug: this.safeSlug(),\n      permalink: this.permalink(),\n      nameSingular: this.nameSingular(),\n    }\n  }\n}\n"]}