{"version":3,"file":"Template.js","sourceRoot":"","sources":["../../../lib/Database/models/Template.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport { Json, toTitleCase } from \"@universe/util\";\nimport * as pluralize from 'pluralize';\n\nexport const enum PageType {\n  SETTINGS = 'settings',\n  COLLECTION = 'collection',\n  PAGE = 'page',\n  COMPONENT = 'component',\n}\n\nexport interface IField {\n  type: string;\n  priority: number;\n  label: string;\n  key: string;\n  options: Record<string, string | number | boolean | null>;\n}\n\nexport interface ITemplate {\n  id?: number;\n  name: string;\n  sortable: boolean;\n  options: Json;\n  fields: Record<string, IField>;\n  type: PageType;\n}\n\nexport class Template implements ITemplate {\n  id: number = 0;\n  name: string;\n  sortable: boolean;\n  options: Json;\n  fields: Record<string, IField>\n  type: PageType;\n\n  constructor(data: ITemplate) {\n    this.name = data.name;\n    this.sortable = data.sortable;\n    this.options = data.options;\n    this.fields = data.fields\n    this.type = data.type\n  }\n\n  static identifier(template: ITemplate): string {\n    return `${template.type}:${template.name}`.toLowerCase();\n  }\n\n  /**\n   * Generates a user-friendly label\n   * Allows template to override default behavior\n   *\n   * @return {string}\n   */\n  label() {\n    if (this.type === 'page' && this.name === 'index') { return 'Home'; }\n    return this.options.label as string || toTitleCase(this.name);\n  }\n\n  /**\n   * Singularized label\n   *\n   * @return {string}\n   */\n  labelSingular() {\n    return pluralize.singular(this.label());\n  }\n\n  /**\n   * Singularized type\n   *\n   * @return {string}\n   */\n  typeSingular() {\n    return pluralize.singular(this.type);\n  }\n\n  /**\n   * Pluralized type\n   *\n   * @return {string}\n   */\n  typePlural() {\n    return pluralize.plural(this.type);\n  }\n\n\n  /**\n   * Table column\n   * Primarily used by dashboard index page\n   *\n   * @return {array} first three fields\n   */\n  tableColumns(): string[] {\n    return Object.keys(this.fields).sort((key1, key2) => {\n      const val1 = this.fields[key1];\n      const val2 = this.fields[key2];\n      if ((val1.priority || Infinity) > (val2.priority || Infinity)) { return 1; }\n      if ((val1.priority || Infinity) < (val2.priority || Infinity)) { return -1; }\n      if (key1 === 'title' || key1 === 'name') { return -1; }\n      if (key2 === 'title' || key2 === 'name') { return 1; }\n      if (key1 === key2) { return 0; }\n      return key1 > key2 ? 1 : -1;\n    }).slice(0, 4);\n  }\n\n  /**\n   * User-friendly headers for table columns\n   *\n   * @return {array}\n   */\n  tableColumnsHeaders() {\n    return this.tableColumns().map(key => this.fields[key].label || toTitleCase(key));\n  }\n\n  /**\n   * Quick way to check if Template has any fields\n   *\n   * @return {boolean}\n   */\n  hasFields() {\n    return Object.keys(this.fields).length > 0;\n  }\n\n  /**\n   * Sort fields by priority\n   *\n   * @return {array}\n   */\n  sortedFields() {\n    return Object.entries(this.fields)\n      .reduce<IField[]>((result, [key, value]) => [...result, { ...value, _name: key }] as IField[], [])\n      .sort((a, b) => (parseInt(`${a.priority}`, 10) < parseInt(`${b.priority}`, 10) ? -1 : 1));\n  }\n\n  isCollection() { return this.type === 'collection'; }\n\n  isPage() { return this.type === 'page'; }\n\n  hasRecordPage() {\n    return fs.existsSync(path.join(process.env.TEMPLATES_PATH, 'collections', `${this.name}.html`));\n  }\n\n  hasBasePage() {\n    return fs.existsSync(path.join(process.env.TEMPLATES_PATH, `${this.name}.html`));\n  }\n\n  /**\n   * If this template has a backing view to render a dedicated page.\n   *\n   * @return {boolean}\n   */\n  hasView() {\n    if (this.type === 'page') {\n      return fs.existsSync(path.join(process.env.TEMPLATES_PATH, `${this.name}.html`));\n    }\n    if (this.type === 'collection') {\n      return fs.existsSync(path.join(process.env.TEMPLATES_PATH, 'collections', `${this.name}.html`));\n    }\n    return false;\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      name: this.name,\n      sortable: this.sortable,\n      options: this.options,\n      fields: this.fields,\n      type: this.type,\n      label: this.label(),\n      labelSingular: this.labelSingular(),\n      typeSingular: this.typeSingular(),\n      typePlural: this.typePlural(),\n      tableColumns: this.tableColumns(),\n      tableColumnsHeaders: this.tableColumnsHeaders(),\n      hasFields: this.hasFields(),\n      sortedFields: this.sortedFields(),\n      isCollection: this.isCollection(),\n      isPage: this.isPage(),\n      hasRecordPage: this.hasRecordPage(),\n      hasBasePage: this.hasBasePage(),\n      hasView: this.hasView(),\n    }\n  }\n\n\n}\n"]}